{"version":3,"file":"static/js/504.ab12ba7e.chunk.js","mappings":"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","sources":["FC/places/pages/NewPlace.tsx","FC/shared/components/FormElements/ImageUpload.tsx","FC/shared/components/FormElements/Input.tsx","hooks/form-hook.tsx","util/validators.tsx","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","hooks/useReducer.tsx","typing/enums.tsx"],"sourcesContent":["import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../../../hooks/auth-context\";\r\nimport { useForm } from \"../../../hooks/form-hook\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { reducerFormStateInitVal } from \"../../../hooks/useReducer\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { EValidatorType } from \"../../../typing/enums\";\r\nimport {\r\n  ERROR_DESCRIPTION_LENGTH,\r\n  ERROR_TEXT_REQUIRED,\r\n  ENDPOINT_PLACES,\r\n  ERROR_IMAGE,\r\n} from \"../../../util/Constants\";\r\nimport { Button } from \"../../shared/components/FormElements/Button\";\r\nimport { Input } from \"../../shared/components/FormElements/Input\";\r\nimport { ErrorModal } from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\n\r\nimport \"./PlaceForm.css\";\r\nimport { ImageUpload } from \"../../shared/components/FormElements/ImageUpload\";\r\n\r\nfunction NewPlace() {\r\n  const [formState, inputHandler] = useForm(\r\n    reducerFormStateInitVal.inputs,\r\n    reducerFormStateInitVal.isValid\r\n  );\r\n  const nav = useNavigate();\r\n\r\n  const user = useContext(AuthContext).user!;\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const submitHandler = async (event: React.FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    if (!formState) {\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"title\", formState.inputs.title!.value);\r\n    formData.append(\"description\", formState.inputs.description!.value);\r\n    formData.append(\"address\", formState.inputs.address!.value);\r\n    formData.append(\"creatorId\", user.id);\r\n    formData.append(\"image\", formState.inputs.image!.value);\r\n\r\n    try {\r\n      await sendRequest(ENDPOINT_PLACES, \"POST\", formData, {\r\n        Authorization: \"Barer \" + user.token,\r\n      });\r\n      console.log(\"submitting...\");\r\n\r\n      nav(\"/\");\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <form className=\"place-form\" onSubmit={submitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[EValidatorType.REQUIRE]}\r\n          errorText={ERROR_TEXT_REQUIRED}\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          label=\"Description\"\r\n          validators={[EValidatorType.MINLENGTH]}\r\n          errorText={ERROR_DESCRIPTION_LENGTH}\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          label=\"Address\"\r\n          validators={[EValidatorType.REQUIRE]}\r\n          errorText={ERROR_TEXT_REQUIRED}\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id=\"image\"\r\n          onInput={inputHandler}\r\n          errorText={ERROR_IMAGE}\r\n        />\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default NewPlace;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\nimport { Button } from \"./Button\";\r\nimport \"./ImageUpload.css\";\r\n\r\nexport const ImageUpload = ({\r\n  id,\r\n  center = false,\r\n  onInput,\r\n  errorText,\r\n}: {\r\n  id: string;\r\n  center?: boolean;\r\n  onInput: Function;\r\n  errorText: string;\r\n}) => {\r\n  const ALLOWED_FILES = \".jpg,.png,.jpeg\";\r\n\r\n  const [file, setFile] = useState<File | null>(null);\r\n  const [previewUrl, setPreviewUrl] = useState<string | ArrayBuffer | null>(\r\n    null\r\n  );\r\n  const [isValid, setIsValid] = useState(true);\r\n  const filePickerRef = useRef<HTMLInputElement | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!file) {\r\n      return;\r\n    }\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    let pickedFile: File | null = null;\r\n    let fileIsValid = isValid;\r\n    if (event.target.files && event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    onInput(id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => {\r\n    filePickerRef.current!.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-control\">\r\n      <input\r\n        id={id}\r\n        ref={filePickerRef}\r\n        style={{ display: \"none\" }}\r\n        type=\"file\"\r\n        accept={ALLOWED_FILES}\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${center && \"center\"}`}>\r\n        <div className=\"image-upload__preview\">\r\n          {previewUrl && <img src={previewUrl as string} alt=\"Preview\" />}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type=\"button\" onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n","import { ChangeEvent, useEffect, useReducer } from \"react\";\r\nimport { inputReducer } from \"../../../../hooks/useReducer\";\r\nimport { EReducerActionType, EValidatorType } from \"../../../../typing/enums\";\r\nimport { reducerInputState } from \"../../../../typing/types\";\r\n\r\nimport \"./Input.css\";\r\n\r\nexport function Input({\r\n  id,\r\n  label,\r\n  element,\r\n  type,\r\n  placeHolder,\r\n  rows,\r\n  validators,\r\n  errorText,\r\n  onInput,\r\n  initValue,\r\n  initialIsValid,\r\n}: {\r\n  id?: string;\r\n  label?: string;\r\n  element?: string;\r\n  type?: string;\r\n  placeHolder?: string;\r\n  rows?: number;\r\n  validators: EValidatorType[];\r\n  errorText: string;\r\n  onInput: Function;\r\n  initValue?: string;\r\n  initialIsValid?: boolean;\r\n}) {\r\n  const reducerInputStateInitVal: reducerInputState = {\r\n    value: initValue || \"\",\r\n    isTouched: false,\r\n    isValid: initialIsValid || false,\r\n  };\r\n  const [inputState, dispatch] = useReducer(\r\n    inputReducer,\r\n    reducerInputStateInitVal\r\n  );\r\n\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = (\r\n    event: ChangeEvent<HTMLInputElement> | ChangeEvent<HTMLTextAreaElement>\r\n  ) => {\r\n    const action = {\r\n      val: event.target.value,\r\n      type: EReducerActionType.CHNAGE,\r\n      validators: validators,\r\n    };\r\n    dispatch(action);\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    const action = {\r\n      val: inputState.value,\r\n      type: EReducerActionType.TOUCH,\r\n      validators: validators,\r\n    };\r\n\r\n    dispatch(action);\r\n  };\r\n\r\n  const currElement =\r\n    element === \"input\" ? (\r\n      <input\r\n        id={id}\r\n        type={type}\r\n        placeholder={placeHolder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value as string}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={id}\r\n        rows={rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value as string}\r\n      />\r\n    );\r\n  return (\r\n    <div\r\n      className={`form-control ${\r\n        !inputState.isValid && inputState.isTouched && \"form-control--invalid\"\r\n      }`}\r\n    >\r\n      <label htmlFor={id}>{label}</label>\r\n      {currElement}\r\n      {!inputState.isValid && inputState.isTouched && <p>{errorText}</p>}\r\n    </div>\r\n  );\r\n}\r\n","import { useReducer, useCallback } from \"react\";\r\nimport { EReducerActionType } from \"../typing/enums\";\r\nimport { reducerFormAction, reducerFormState } from \"../typing/types\";\r\nimport { formReducer } from \"./useReducer\";\r\n\r\nexport const useForm = (\r\n  initialInputs: reducerFormState[\"inputs\"],\r\n  initialIsValid: reducerFormState[\"isValid\"]\r\n): [\r\n  reducerFormState,\r\n  (id: string, value: string, isValid: boolean) => void,\r\n  (\r\n    formInputs: reducerFormState[\"inputs\"],\r\n    formIsValid: reducerFormState[\"isValid\"]\r\n  ) => void\r\n] => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialIsValid,\r\n  });\r\n\r\n  const inputHandler = useCallback(\r\n    (id: string, value: string, isValid: boolean) => {\r\n      const action: reducerFormAction = {\r\n        type: EReducerActionType.CHNAGE,\r\n        input: {\r\n          value: value,\r\n          isValid: isValid,\r\n        },\r\n        inputId: id,\r\n      };\r\n      dispatch(action);\r\n    },\r\n    []\r\n  );\r\n\r\n  const setFormData = useCallback(\r\n    (\r\n      formInputs: reducerFormState[\"inputs\"],\r\n      formIsValid: reducerFormState[\"isValid\"]\r\n    ) => {\r\n      const inputs = { inputs: formInputs, isValid: formIsValid };\r\n      const action: reducerFormAction = {\r\n        type: EReducerActionType.SET,\r\n        input: inputs,\r\n      };\r\n      dispatch(action);\r\n    },\r\n    []\r\n  );\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};\r\n","import { EValidatorType } from \"../typing/enums\";\r\nimport { MINLENGTH, MAXLENGTH, MIN, MAX } from \"./Constants\";\r\n\r\nexport const VALIDATE = (\r\n  value: string | number | File,\r\n  validators: EValidatorType[]\r\n) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator === EValidatorType.REQUIRE) {\r\n      value = value as string;\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator === EValidatorType.MINLENGTH) {\r\n      value = value as string;\r\n      isValid = isValid && value.trim().length >= MINLENGTH;\r\n    }\r\n    if (validator === EValidatorType.MAXLENGTH) {\r\n      value = value as string;\r\n      isValid = isValid && value.trim().length <= MAXLENGTH;\r\n    }\r\n    if (validator === EValidatorType.MIN) {\r\n      isValid = isValid && +value >= MIN;\r\n    }\r\n    if (validator === EValidatorType.MAX) {\r\n      isValid = isValid && +value <= MAX;\r\n    }\r\n    if (validator === EValidatorType.EMAIL) {\r\n      value = value as string;\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n    if (validator === EValidatorType.FILE) {\r\n      value = value as File;\r\n      isValid = isValid && !!value.name.match(/\\.(jpg|jpeg|png|gif)$/);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { EReducerActionType, EValidatorType } from \"../typing/enums\";\r\nimport {\r\n  reducerInputAction,\r\n  reducerFormState,\r\n  reducerInputState,\r\n  reducerFormAction,\r\n} from \"../typing/types\";\r\nimport { VALIDATE } from \"../util/validators\";\r\n\r\n/* ************************************************************************************************** */\r\n\r\nexport const reducerInputStateInitVal: reducerInputState = {\r\n  value: \"\",\r\n  isTouched: false,\r\n  isValid: false,\r\n};\r\n\r\nexport const inputReducer = (\r\n  state: reducerInputState,\r\n  action: reducerInputAction\r\n) => {\r\n  switch (action.type) {\r\n    case EReducerActionType.CHNAGE: {\r\n      let newVal = action.val;\r\n      return {\r\n        ...state,\r\n        value: newVal,\r\n        isValid: VALIDATE(newVal, action.validators as EValidatorType[]),\r\n      };\r\n    }\r\n    case EReducerActionType.TOUCH: {\r\n      return { ...state, isTouched: true };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n\r\n/* ************************************************************************************************** */\r\n\r\nexport const reducerFormStateInitVal: reducerFormState = {\r\n  inputs: {\r\n    title: reducerInputStateInitVal,\r\n    description: reducerInputStateInitVal,\r\n    address: reducerInputStateInitVal,\r\n    image: reducerInputStateInitVal,\r\n  },\r\n  isValid: false,\r\n};\r\n\r\nexport const formReducer = (\r\n  state: reducerFormState,\r\n  action: reducerFormAction\r\n) => {\r\n  switch (action.type) {\r\n    case EReducerActionType.CHNAGE: {\r\n      action.input = action.input as reducerInputState;\r\n      let formIsVlaid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsVlaid = formIsVlaid && action.input.isValid;\r\n        } else {\r\n          formIsVlaid =\r\n            formIsVlaid && (state.inputs[inputId] as reducerInputState).isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId as string]: {\r\n            value: action.input.value,\r\n            isValid: action.input.isValid,\r\n          },\r\n        },\r\n        isValid: formIsVlaid,\r\n      };\r\n    }\r\n    case EReducerActionType.SET: {\r\n      action.input = action.input as reducerFormState;\r\n      return { inputs: action.input.inputs, isValid: action.input.isValid };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","export enum EValidatorType {\r\n  REQUIRE,\r\n  MINLENGTH,\r\n  MAXLENGTH,\r\n  MIN,\r\n  MAX,\r\n  EMAIL,\r\n  FILE,\r\n}\r\n\r\nexport enum EReducerActionType {\r\n  CHNAGE,\r\n  TOUCH,\r\n  SET,\r\n}\r\n\r\nexport enum HTTP_RESPONSE_STATUS {\r\n  OK = 200,\r\n  Created = 201,\r\n  Accepted = 202,\r\n  No_Content = 204,\r\n  Bad_Request = 400,\r\n  Unauthorized = 401,\r\n  Not_Found = 404,\r\n  Internal_Server_Error = 500,\r\n  Unprocessable_Entity = 422,\r\n}\r\n"],"names":["useForm","reducerFormStateInitVal","formState","inputHandler","nav","useNavigate","user","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","submitHandler","event","preventDefault","formData","FormData","append","inputs","title","value","description","address","id","image","ENDPOINT_PLACES","Authorization","token","console","log","onClear","className","onSubmit","asOverlay","I","element","type","label","validators","EValidatorType","errorText","ERROR_TEXT_REQUIRED","onInput","ERROR_DESCRIPTION_LENGTH","ERROR_IMAGE","disabled","isValid","ImageUpload","center","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","src","alt","Button","onClick","current","click","Input","placeHolder","rows","reducerInputStateInitVal","initValue","isTouched","initialIsValid","useReducer","inputReducer","inputState","dispatch","changeHandler","action","val","EReducerActionType","touchHandler","currElement","placeholder","onBlur","htmlFor","initialInputs","formReducer","useCallback","input","inputId","formInputs","formIsValid","VALIDATE","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","e","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","MINLENGTH","MAXLENGTH","MIN","MAX","test","name","match","state","newVal","formIsVlaid","HTTP_RESPONSE_STATUS"],"sourceRoot":""}