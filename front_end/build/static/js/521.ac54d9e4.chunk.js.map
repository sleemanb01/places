{"version":3,"file":"static/js/521.ac54d9e4.chunk.js","mappings":"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","sources":["FC/shared/components/UIElements/Map.tsx","FC/places/components/PlaceItem.tsx","FC/places/components/PlacesList.tsx","FC/places/pages/Places.tsx","FC/shared/components/UIElements/Card.tsx"],"sourcesContent":["import { CSSProperties, useRef, useEffect } from \"react\";\r\nimport { coordinate } from \"../../../../typing/types\";\r\nimport \"./Map.css\";\r\n\r\nconst API_KEY = process.env.REACT_APP_GOOGLE_API_KEY;\r\n\r\nexport function Map({\r\n  className,\r\n  style,\r\n  center,\r\n  zoom,\r\n}: {\r\n  className?: string;\r\n  style?: CSSProperties;\r\n  center: coordinate;\r\n  zoom: number;\r\n}) {\r\n  const mapRef = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const map = new google.maps.Map(mapRef.current as HTMLElement, {\r\n      center: center,\r\n      zoom: zoom,\r\n    });\r\n\r\n    new google.maps.Marker({ position: center, map: map });\r\n  }, [center, zoom]);\r\n\r\n  return <div ref={mapRef} className={`map ${className}`} style={style}></div>;\r\n}\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Button } from \"../../shared/components/FormElements/Button\";\r\nimport Card from \"../../shared/components/UIElements/Card\";\r\nimport Modal from \"../../shared/components/UIElements/Modal\";\r\nimport { IPlace } from \"../../../typing/interfaces\";\r\nimport { Map } from \"../../shared/components/UIElements/Map\";\r\n\r\nimport \"./PlaceItem.css\";\r\nimport { AuthContext } from \"../../../hooks/auth-context\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { ErrorModal } from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { BACKEND_URL, ENDPOINT_PLACES } from \"../../../util/Constants\";\r\n\r\n/* ************************************************************************************************** */\r\n\r\nexport function PlaceItem({\r\n  place,\r\n  onDelete,\r\n}: {\r\n  place: IPlace;\r\n  onDelete: Function;\r\n}) {\r\n  const user = useContext(AuthContext).user;\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [isMapVisible, setIsMapVisible] = useState(false);\r\n  const [isConfirmVisible, setIsConfirmVisible] = useState(false);\r\n\r\n  /* ************************************************************************************************** */\r\n\r\n  const isCreator = user ? user.id === place.creatorId : false;\r\n  const randomCoordinate = { lat: 32.938029, lng: 35.188625 };\r\n\r\n  const openMapHandler = () => {\r\n    setIsMapVisible(true);\r\n  };\r\n\r\n  const closeMapHandler = () => {\r\n    setIsMapVisible(false);\r\n  };\r\n\r\n  const openConfirmHandler = () => {\r\n    setIsConfirmVisible(true);\r\n  };\r\n\r\n  const closeConfirmHandler = () => {\r\n    setIsConfirmVisible(false);\r\n  };\r\n\r\n  const confirmDeleteHandler = async () => {\r\n    closeConfirmHandler();\r\n\r\n    try {\r\n      await sendRequest(ENDPOINT_PLACES + \"/\" + place._id, \"DELETE\", null, {\r\n        Authorization: \"Barer \" + user?.token,\r\n      });\r\n      onDelete(place._id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  /* ************************************************************************************************** */\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Modal\r\n        show={isMapVisible}\r\n        onCancel={closeMapHandler}\r\n        header={place.address}\r\n        contentClass=\"place-item__modal-content\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\r\n      >\r\n        <div className=\"map-container\">\r\n          <Map\r\n            center={place.coordinate ? place.coordinate : randomCoordinate}\r\n            zoom={8}\r\n          />\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        show={isConfirmVisible}\r\n        onCancel={closeConfirmHandler}\r\n        header=\"Are you sure?\"\r\n        footerClass=\"place-item__modal-actions\"\r\n        footer={\r\n          <React.Fragment>\r\n            <Button inverse onClick={closeConfirmHandler}>\r\n              CANCEL\r\n            </Button>\r\n            <Button danger onClick={confirmDeleteHandler}>\r\n              DELETE\r\n            </Button>\r\n          </React.Fragment>\r\n        }\r\n      >\r\n        <p>Do you want to proceed and delete this!</p>\r\n      </Modal>\r\n      <li className=\"place-item\">\r\n        <Card className={\"place-item__content\"}>\r\n          {isLoading ? <LoadingSpinner asOverlay /> : <></>}\r\n          <div className=\"place-item__image\">\r\n            <img\r\n              src={BACKEND_URL ? BACKEND_URL + place.image : \"\"}\r\n              alt={place.title + \"image\"}\r\n            />\r\n          </div>\r\n          <div className=\"place-item__info\">\r\n            <h2>{place.title}</h2>\r\n            <h3>{place.address}</h3>\r\n            <p>{place.description}</p>\r\n          </div>\r\n          <div className=\"place-item__actions\">\r\n            <Button inverse={true} onClick={openMapHandler}>\r\n              VIEW ON MAP\r\n            </Button>\r\n            {isCreator && <Button to={`/places/${place._id}`}>EDIT</Button>}\r\n            {isCreator && (\r\n              <Button danger={true} onClick={openConfirmHandler}>\r\n                DELETE\r\n              </Button>\r\n            )}\r\n          </div>\r\n        </Card>\r\n      </li>\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import Card from \"../../shared/components/UIElements/Card\";\r\nimport { IPlace } from \"../../../typing/interfaces\";\r\nimport { PlaceItem } from \"./PlaceItem\";\r\n\r\nimport \"./PlacesList.css\";\r\n\r\nimport { Button } from \"../../shared/components/FormElements/Button\";\r\n\r\nexport function PlacesList({\r\n  places,\r\n  onDeletePlace,\r\n}: {\r\n  places: IPlace[];\r\n  onDeletePlace: Function;\r\n}) {\r\n  if (places.length === 0) {\r\n    return (\r\n      <div className=\"place-list center\">\r\n        <Card>\r\n          <h2>No places found. Maybe create one?</h2>\r\n          <Button to=\"/places/new\">SHARE PLACE</Button>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <ul className=\"place-list\">\r\n      {places.map((curr) => (\r\n        <PlaceItem\r\n          key={curr._id!.toString()}\r\n          place={curr}\r\n          onDelete={onDeletePlace}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../../../hooks/http-hook\";\r\nimport { IPlace } from \"../../../typing/interfaces\";\r\nimport { ENDPOINT_USER_PLACES } from \"../../../util/Constants\";\r\nimport { ErrorModal } from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { PlacesList } from \"../components/PlacesList\";\r\n\r\nfunction Places() {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [places, setPlaces] = useState<IPlace[]>([]);\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchPlaces = async () => {\r\n      try {\r\n        const res = await sendRequest(ENDPOINT_USER_PLACES + \"/\" + userId);\r\n\r\n        setPlaces(res.places);\r\n      } catch (err) {}\r\n    };\r\n\r\n    fetchPlaces();\r\n  }, [sendRequest, userId]);\r\n\r\n  const placeDeletedHandler = (deletedPlaceId: string) => {\r\n    setPlaces((prevPlaces) =>\r\n      prevPlaces.filter((p) => p._id !== deletedPlaceId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner asOverlay />\r\n        </div>\r\n      )}\r\n      <PlacesList\r\n        places={places.filter((e) => e.creatorId === userId)}\r\n        onDeletePlace={placeDeletedHandler}\r\n      />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default Places;\r\n","import React from \"react\";\n\nimport \"./Card.css\";\n\nconst Card = ({\n  className,\n  style,\n  children,\n}: {\n  className?: String;\n  style?: React.CSSProperties;\n  children: JSX.Element | JSX.Element[];\n}) => {\n  return (\n    <div className={`card ${className}`} style={style}>\n      {children}\n    </div>\n  );\n};\n\nexport default Card;\n"],"names":["Map","className","style","center","zoom","mapRef","useRef","useEffect","map","google","maps","current","Marker","position","ref","PlaceItem","place","onDelete","user","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","isMapVisible","setIsMapVisible","isConfirmVisible","setIsConfirmVisible","isCreator","id","creatorId","closeMapHandler","closeConfirmHandler","confirmDeleteHandler","ENDPOINT_PLACES","_id","Authorization","token","ErrorModal","onClear","Modal","show","onCancel","header","address","contentClass","footerClass","footer","Button","onClick","coordinate","lat","lng","inverse","danger","Card","LoadingSpinner","asOverlay","src","BACKEND_URL","image","alt","title","description","to","PlacesList","places","onDeletePlace","length","curr","toString","setPlaces","userId","useParams","fetchPlaces","ENDPOINT_USER_PLACES","res","filter","e","deletedPlaceId","prevPlaces","p","children"],"sourceRoot":""}